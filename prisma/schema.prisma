generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL_MYSQL")
}

model accion_comercial {
  accion_comercial_id Int       @id @default(autoincrement())
  cliente_id          Int?
  cita_id             Int?
  pago_id             Int?
  persona_id          Int?
  estado              String?   @db.VarChar(25)
  fecha_accion        DateTime? @default(now()) @db.DateTime(0)
  nota                String    @db.Text
  cliente             cliente?  @relation(fields: [cliente_id], references: [cliente_id], onDelete: Cascade, onUpdate: NoAction, map: "accion_comercial_ibfk_1")
  cita                cita?     @relation(fields: [cita_id], references: [cita_id], onUpdate: NoAction, map: "accion_comercial_ibfk_2")
  pago                pago?     @relation(fields: [pago_id], references: [pago_id], onUpdate: NoAction, map: "accion_comercial_ibfk_3")
  persona             persona?  @relation(fields: [persona_id], references: [persona_id], onUpdate: NoAction, map: "accion_comercial_ibfk_4")

  @@index([cita_id], map: "cita_id")
  @@index([cliente_id], map: "cliente_id")
  @@index([pago_id], map: "pago_id")
  @@index([persona_id], map: "persona_id")
}

model campanha {
  campanha_id      Int                @id @default(autoincrement())
  nombre_campanha  String             @db.VarChar(100)
  descripcion      String?            @db.Text
  fecha_creacion   DateTime?          @default(now()) @db.DateTime(0)
  estado_campanha  String?            @default("activa") @db.VarChar(25)
  mensaje_cliente  String?            @db.Text
  fecha_inicio     DateTime?          @default(now()) @db.DateTime(0)
  fecha_fin        DateTime?          @db.DateTime(0)
  num_clientes     Int?               @default(0)
  tipo             String             @default("in") @db.VarChar(10)
  template_id      Int?
  template         template?          @relation(fields: [template_id], references: [id], map: "fk_campanha_template")
  cliente_campanha cliente_campanha[]

  @@index([template_id], map: "fk_campana_template")
}

model cita {
  cita_id          Int                @id @default(autoincrement())
  cliente_id       Int
  conversacion_id  Int?
  fecha_cita       DateTime           @db.DateTime(0)
  estado_cita      String?            @default("agendada") @db.VarChar(25)
  motivo           String             @db.VarChar(100)
  fecha_creacion   DateTime           @default(now()) @db.DateTime(0)
  aviso            Int?               @default(0)
  accion_comercial accion_comercial[]
  cliente          cliente            @relation(fields: [cliente_id], references: [cliente_id], onDelete: Cascade, onUpdate: NoAction, map: "cita_ibfk_1")
  conversacion     conversacion?      @relation(fields: [conversacion_id], references: [conversacion_id], onUpdate: NoAction, map: "cita_ibfk_2")
  pago             pago[]

  @@index([cliente_id], map: "cliente_id")
  @@index([conversacion_id], map: "conversacion_id")
}

model cliente {
  cliente_id                   Int                @id @default(autoincrement())
  documento_identidad          String?            @db.VarChar(12)
  tipo_documento               String?            @db.VarChar(20)
  nombre                       String             @db.VarChar(100)
  apellido                     String?            @db.VarChar(100)
  celular                      String             @db.VarChar(20)
  email                        String?            @unique(map: "email") @db.VarChar(100)
  fecha_creacion               DateTime?          @default(now()) @db.DateTime(0)
  fecha_ultima_interaccion     DateTime?          @db.DateTime(0)
  fecha_ultima_interaccion_bot DateTime?          @db.DateTime(0)
  estado                       String?            @default("en seguimiento") @db.VarChar(25)
  motivo                       String?            @default("desconocido") @db.VarChar(25)
  categoria_no_interes         String?            @db.VarChar(20)
  detalle_no_interes           String?            @db.VarChar(100)
  bound                        Boolean?
  observacion                  String?            @db.Text
  gestor                       String?            @default("") @db.VarChar(100)
  accion                       String?            @default("") @db.VarChar(50)
  in_out                       Boolean?           @default(false)
  score                        String             @default("no_score") @db.VarChar(20)
  accion_comercial             accion_comercial[]
  cita                         cita[]
  cliente_campanha             cliente_campanha[]
  codigo_pago                  codigo_pago[]
  conversacion                 conversacion[]
  historico_estado             historico_estado[]
  historico_motivo             historico_motivo[]
  historico_score              historico_score[]
  leadh                        leadh[]
  pago                         pago[]
}

model cliente_campanha {
  cliente_campanha_id Int       @id @default(autoincrement())
  cliente_id          Int
  campanha_id         Int
  fecha_asociacion    DateTime? @default(now()) @db.DateTime(0)
  cliente             cliente   @relation(fields: [cliente_id], references: [cliente_id], onDelete: Cascade, onUpdate: NoAction, map: "cliente_campanha_ibfk_1")
  campanha            campanha  @relation(fields: [campanha_id], references: [campanha_id], onDelete: Cascade, onUpdate: NoAction, map: "cliente_campanha_ibfk_2")

  @@index([campanha_id], map: "campanha_id")
  @@index([cliente_id], map: "cliente_id")
}

model codigo_pago {
  id_codigo_pago    Int       @id @default(autoincrement())
  cliente_id        Int?
  codigo            Int       @unique(map: "codigo")
  tipo_codigo       String?   @db.VarChar(50)
  caso_relacionado  String?   @db.VarChar(100)
  fecha_asignacion  DateTime  @db.Date
  fecha_vencimiento DateTime? @db.Date
  activo            Boolean?  @default(true)
  pago_realizado    Boolean?  @default(false)
  fecha_pago        DateTime? @db.Date
  numero_cuota      Int?
  cliente           cliente?  @relation(fields: [cliente_id], references: [cliente_id], onDelete: Cascade, onUpdate: NoAction, map: "codigo_pago_ibfk_1")

  @@index([cliente_id], map: "cliente_id")
}

model conversacion {
  conversacion_id          Int       @id @default(autoincrement())
  cliente_id               Int
  fecha_conversacion       DateTime? @default(now()) @db.DateTime(0)
  tipo_conversacion        String?   @db.VarChar(50)
  mensaje                  String?   @db.Text
  resultado                String?   @db.VarChar(50)
  estado_conversacion      String?   @default("activa") @db.VarChar(25)
  fecha_ultima_interaccion DateTime? @default(now()) @db.DateTime(0)
  nivel_satisfaccion       String?   @db.VarChar(25)
  cita                     cita[]
  cliente                  cliente   @relation(fields: [cliente_id], references: [cliente_id], onDelete: Cascade, onUpdate: NoAction, map: "conversacion_ibfk_1")

  @@index([cliente_id], map: "cliente_id")
}

model historico_estado {
  historico_estado_id Int       @id @default(autoincrement())
  cliente_id          Int
  estado              String    @db.VarChar(25)
  fecha_estado        DateTime? @default(now()) @db.DateTime(0)
  detalle             String?   @db.Text
  cliente             cliente   @relation(fields: [cliente_id], references: [cliente_id], onDelete: Cascade, onUpdate: NoAction, map: "historico_estado_ibfk_1")

  @@index([cliente_id], map: "cliente_id")
}

model historico_motivo {
  historico_motivo_id Int       @id @default(autoincrement())
  cliente_id          Int
  motivo              String    @db.VarChar(20)
  fecha_cambio        DateTime? @default(now()) @db.DateTime(0)
  detalle             String?   @db.Text
  cliente             cliente   @relation(fields: [cliente_id], references: [cliente_id], onDelete: Cascade, onUpdate: NoAction, map: "historico_motivo_ibfk_1")

  @@index([cliente_id], map: "cliente_id")
}

model historico_score {
  historico_score_id Int       @id @default(autoincrement())
  cliente_id         Int
  score              String    @db.VarChar(20)
  fecha_cambio       DateTime? @default(now()) @db.DateTime(0)
  cliente            cliente   @relation(fields: [cliente_id], references: [cliente_id], onDelete: Cascade, onUpdate: NoAction, map: "historico_score_ibfk_1")

  @@index([cliente_id], map: "cliente_id")
}

model leadh {
  leadh_id       Int      @id @default(autoincrement())
  cliente_id     Int
  fecha_contacto DateTime @db.DateTime(0)
  prioridad_lead Int
  leadh_source   String   @db.VarChar(100)
  campanha       String?  @db.VarChar(100)
  tipo           String?  @db.VarChar(100)
  canal_lead     String?  @db.VarChar(20)
  estado_lead    String?  @default("en seguimiento") @db.VarChar(25)
  nota           String?  @db.Text
  cliente        cliente  @relation(fields: [cliente_id], references: [cliente_id], onDelete: Cascade, onUpdate: NoAction, map: "leadh_ibfk_1")

  @@index([cliente_id], map: "cliente_id")
}

model pago {
  pago_id          Int                @id @default(autoincrement())
  cliente_id       Int
  cita_id          Int?
  fecha_pago       DateTime           @db.DateTime(0)
  monto            Decimal            @db.Decimal(10, 2)
  metodo_pago      String             @db.VarChar(50)
  estado_pago      String?            @default("pendiente") @db.VarChar(25)
  first_name       String?            @default("") @db.VarChar(40)
  last_name        String?            @default("") @db.VarChar(40)
  num_operacion    String?            @default("") @db.VarChar(40)
  accion_comercial accion_comercial[]
  cliente          cliente            @relation(fields: [cliente_id], references: [cliente_id], onDelete: Cascade, onUpdate: NoAction, map: "pago_ibfk_1")
  cita             cita?              @relation(fields: [cita_id], references: [cita_id], onUpdate: NoAction, map: "pago_ibfk_2")

  @@index([cita_id], map: "cita_id")
  @@index([cliente_id], map: "cliente_id")
}

model persona {
  persona_id       Int                @id
  nombre           String             @db.VarChar(120)
  primer_apellido  String             @db.VarChar(120)
  segundo_apellido String?            @db.VarChar(120)
  celular          String?            @db.VarChar(12)
  num_leads        Int?               @default(0)
  accion_comercial accion_comercial[]
  usuario          usuario            @relation(fields: [persona_id], references: [usuario_id], onDelete: Cascade, onUpdate: NoAction, map: "persona_ibfk_1")
}

model rol {
  rol_id      Int       @id @default(autoincrement())
  nombre_rol  String    @unique(map: "nombre_rol") @db.VarChar(50)
  descripcion String?   @db.VarChar(255)
  usuario     usuario[]
}

model template {
  id                   Int        @id @default(autoincrement())
  nombre_template      String     @db.VarChar(100)
  mensaje              String     @db.Text
  created_at           DateTime   @default(now()) @db.DateTime(0)
  template_content_sid String     @default("") @db.VarChar(120)
  parametro            Boolean    @default(false)
  campanha             campanha[]
}

model usuario {
  usuario_id Int      @id @default(autoincrement())
  username   String   @unique(map: "username") @db.VarChar(50)
  password   String   @db.VarChar(255)
  rol_id     Int?     @default(2)
  activo     Int      @default(1)
  persona    persona?
  rol        rol?     @relation(fields: [rol_id], references: [rol_id], onUpdate: NoAction, map: "usuario_ibfk_1")

  @@index([rol_id], map: "rol_id")
}
